def matrix_mul(m_a, m_b):
    """
    Multiplies two matrices (m_a and m_b) and returns the resulting matrix.

    Parameters:
    m_a (list of lists of int/float): The first matrix to multiply.
    m_b (list of lists of int/float): The second matrix to multiply.

    Returns:
    list: A new matrix that is the result of multiplying m_a by m_b.

    Raises:
    TypeError: If either m_a or m_b is not a list of lists, or if their elements are not all integers or floats,
               or if the rows of the matrices are not all the same size.
    ValueError: If either m_a or m_b is empty, or if the number of columns in m_a does not equal the number of rows in m_b,
                which means the matrices cannot be multiplied.

    Examples:
    >>> matrix_mul([[1, 2]], [[3], [4]])
    [[11]]

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
    [[58, 64], [139, 154]]

    >>> matrix_mul([[1, 2]], [[3, 4]])
    ValueError: m_a and m_b can't be multiplied

    Notes:
    - The number of columns in the first matrix must be equal to the number of rows in the second matrix.
    - The resulting matrix will have the same number of rows as the first matrix and the same number of columns as the second matrix.
    """
    # Validation and matrix multiplication logic as implemented above